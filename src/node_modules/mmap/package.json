{
  "name": "mmap",
  "description": "mmap() fds into buffers",
  "license": "BSD",
  "version": "2.0.2",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/geocar/mmap.git"
  },
  "scripts": {
    "pretest": "npm build .",
    "test": "node --expose-gc run_tests.js",
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# mmap\n\nmmap(2) bindings for node.js that work in 0.10\n\n##Â Installing\n\n    npm test\n    npm install -g\n\n## Usage\n\n    mmap = require(\"mmap\")\n    buffer = mmap(n_bytes, protection, flags, fd, offset)\n\n<table>\n  <tr>\n    <td><i>n_bytes</i></td>\n    <td>The number of bytes to map into memory.</td>\n  </tr>\n  <tr>\n    <td><i>protection</i></td>\n    <td>Memory protection: either <b>mmap.PROT_NONE</b> or a bitwise OR of <b>mmap.PROT_READ</b>, <b>mmap.PROT_WRITE</b> and <b>mmap.PROT_EXEC</b>.</td>\n  </tr>\n  <tr>\n    <td><i>flags</i></td>\n    <td>Flags: either <b>mmap.MAP_SHARED</b> or <b>mmap.MAP_PRIVATE</b>.</td>\n  </tr>\n  <tr>\n    <td><i>fd</i></td>\n    <td>File descriptor. You can also use a file name (string). When you do this, <b>mmap()</b> tries to do the right thing by creating or growing the file to <i>n_bytes</i> if necessary.</td>\n  </tr>\n  <tr>\n    <td><i>offset</i></td>\n    <td>File offset. Must be either zero or a multiple of <b>mmap.PAGESIZE</b>.</td>\n  </tr>\n</table>\n\nWhile a finaliser is installed to automatically unmap buffer, you can\nforce it to unmap immediately with:\n\n    buffer.unmap()\n\nYou can also [msync()](http://pubs.opengroup.org/onlinepubs/9699919799/functions/msync.html) by calling: `buffer.sync([offset, [length, [flags]]])` method:\n\n<table>\n  <tr>\n    <td><i>offset</i></td>\n    <td>The start address to sync. This argument optional, the default is 0.</td>\n  </tr>\n  <tr>\n    <td><i>length</i></td>\n    <td>The number of bytes to sync. This argument optional, the default is the entire buffer.</td>\n  </tr>\n  <tr>\n    <td><i>flags</i></td>\n    <td>Flags: either <b>mmap.MS_SYNC</b> or <b>mmap.MS_ASYNC</b> optionally bitwise OR with <b>mmap.MS_INVALIDATE</b>. This argument is optional, the default is <b>mmap.MS_SYNC</b>.</td>\n  </tr>\n</table>\n\nFor compatibility, <b>mmap.map()</b> is an alias for <b>mmap()</b>\n\n## See Also\n\n* POSIX 1003.1 [mmap](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html) and [msync](http://pubs.opengroup.org/onlinepubs/9699919799/functions/msync.html)\n* The `example/` directory contains some sample uses of the mmap module\n* [bnoordhuis/node-mmap](https://github.com/bnoordhuis/node-mmap), the original node-mmap, on which this is based.\n",
  "readmeFilename": "README.md",
  "_id": "mmap@2.0.2",
  "_from": "mmap@"
}
